import json
import os

# Define the filename for storing contacts
FILENAME = 'contacts.json'

# Load contacts from the file
def load_contacts():
    if os.path.exists(FILENAME):
        with open(FILENAME, 'r') as file:
            return json.load(file)
    return []

# Save contacts to the file
def save_contacts(contacts):
    with open(FILENAME, 'w') as file:
        json.dump(contacts, file, indent=4)

# Add a new contact
def add_contact(contacts):
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email: ")
    address = input("Enter address: ")
    
    contact = {
        'name': name,
        'phone': phone,
        'email': email,
        'address': address
    }
    contacts.append(contact)
    save_contacts(contacts)
    print("Contact added successfully!")

# View the contact list
def view_contacts(contacts):
    if not contacts:
        print("No contacts found.")
    else:
        print(f"{'Name':<20} {'Phone':<15}")
        print("-" * 35)
        for contact in contacts:
            print(f"{contact['name']:<20} {contact['phone']:<15}")

# Search for a contact by name or phone
def search_contact(contacts):
    search_term = input("Enter name or phone number to search: ").lower()
    found = [contact for contact in contacts if search_term in contact['name'].lower() or search_term in contact['phone']]
    
    if not found:
        print("No matching contacts found.")
    else:
        print(f"{'Name':<20} {'Phone':<15}")
        print("-" * 35)
        for contact in found:
            print(f"{contact['name']:<20} {contact['phone']:<15}")

# Update contact details
def update_contact(contacts):
    search_term = input("Enter name or phone number of the contact to update: ").lower()
    for contact in contacts:
        if search_term in contact['name'].lower() or search_term in contact['phone']:
            print("Contact found:")
            print(f"Name: {contact['name']}")
            print(f"Phone: {contact['phone']}")
            print(f"Email: {contact['email']}")
            print(f"Address: {contact['address']}")
            
            contact['name'] = input("Enter new name (leave blank to keep current): ") or contact['name']
            contact['phone'] = input("Enter new phone number (leave blank to keep current): ") or contact['phone']
            contact['email'] = input("Enter new email (leave blank to keep current): ") or contact['email']
            contact['address'] = input("Enter new address (leave blank to keep current): ") or contact['address']
            
            save_contacts(contacts)
            print("Contact updated successfully!")
            return
    print("Contact not found.")

# Delete a contact
def delete_contact(contacts):
    search_term = input("Enter name or phone number of the contact to delete: ").lower()
    new_contacts = [contact for contact in contacts if not (search_term in contact['name'].lower() or search_term in contact['phone'])]
    
    if len(new_contacts) == len(contacts):
        print("Contact not found.")
    else:
        save_contacts(new_contacts)
        print("Contact deleted successfully!")

# Main function for the user interface
def main():
    contacts = load_contacts()
    
    while True:
        print("\nContact Management System")
        print("1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == '1':
            add_contact(contacts)
        elif choice == '2':
            view_contacts(contacts)
        elif choice == '3':
            search_contact(contacts)
        elif choice == '4':
            update_contact(contacts)
        elif choice == '5':
            delete_contact(contacts)
        elif choice == '6':
            break
        else:
            print("Invalid choice! Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main()
